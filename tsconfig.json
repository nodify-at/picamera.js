{
    "compilerOptions": {
        "target": "ES2024",
        /* Modules */
        "module": "nodenext" /* Specify what module code is generated. */,
        "moduleResolution": "node16",
        "rootDirs": [
            "demo",
            "lib"
        ],

        "sourceMap": true,
        "declaration": true,

        "outDir": "./dist" /* Specify a file that bundles all outputs into one JavaScript file. If 'declaration' is true, also designates a file that bundles all .d.ts output. */,

        "allowSyntheticDefaultImports": true,             /* Allow 'import x from y' when a module doesn't have a default export. */
        "esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */,
        "forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,

        /* Type Checking */
        "strict": true /* Enable all strict type-checking options. */,
        "noImplicitAny": true,                            /* Enable error reporting for expressions and declarations with an implied 'any' type. */
        "noImplicitThis": true,                           /* Enable error reporting when 'this' is given the type 'any'. */
        "useUnknownInCatchVariables": true,               /* Default catch clause variables as 'unknown' instead of 'any'. */

        "noUnusedLocals": true,                           /* Enable error reporting when local variables aren't read. */
        "noUnusedParameters": true,                       /* Raise an error when a function parameter isn't read. */
        "exactOptionalPropertyTypes": true,               /* Interpret optional property types as written, rather than adding 'undefined'. */
        "noImplicitReturns": true,                        /* Enable error reporting for codepaths that do not explicitly return in a function. */
        "noFallthroughCasesInSwitch": true,               /* Enable error reporting for fallthrough cases in switch statements. */
        "noUncheckedIndexedAccess": true,                 /* Add 'undefined' to a type when accessed using an index. */
        "noImplicitOverride": true,                       /* Ensure overriding members in derived classes are marked with an override modifier. */
        "noPropertyAccessFromIndexSignature": true,       /* Enforces using indexed accessors for keys declared using an indexed type. */
        "allowUnusedLabels": false,                        /* Disable error reporting for unused labels. */
        "allowUnreachableCode": false,                     /* Disable error reporting for unreachable code. */

        /* Completeness */
        "skipLibCheck": true
    },
    "include": [ "demo/**/*.ts", "lib/**/*.ts" ],
    "exclude": ["node_modules", "dist", "build"]
}
